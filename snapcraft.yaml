name: deltachat-desktop
base: core22
version: "1.00"
summary: Delta Chat is a messaging app that works over e-mail
description: |
    Delta Chat is a new chat app that sends messages via e-mails, encrypted if possible, with Autocrypt.
    You do not have to sign up anywhere, just use your existing e-mail account with Delta Chat.

    Source: https://download.delta.chat/desktop/
    Snap-Source: https://github.com/nbuechner/deltachat-snap

grade: stable
confinement: strict
compression: lzo

architectures:
  - build-on: amd64
    build-for: amd64
  - build-on: arm64
    build-for: arm64

apps:
  deltachat-desktop:
    command: ./deltachat-desktop --disable-gpu --no-sandbox
    plugs: [home, x11, desktop, unity7, removable-media, network, audio-record, audio-playback, shared-memory]
    extensions: [ gnome ]
    environment:
      TMPDIR: $XDG_RUNTIME_DIR
      DISABLE_WAYLAND: 1
      LD_LIBRARY_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libunity

plugs:
  shared-memory:
    private: true

parts:
  main:
    source: .
    plugin: dump
    override-build: |
        set +u # core20 base does not allow unbound variables !
        # workaround for build.snapcraft.io builds
        # https://bugs.launchpad.net/bugs/1886861
        if [ -n "$http_proxy" ]; then
          export ELECTRON_GET_USE_PROXY=1
          export GLOBAL_AGENT_HTTP_PROXY="${http_proxy}"
          export GLOBAL_AGENT_HTTPS_PROXY="${http_proxy}"
        fi
        version=$(wget -qO- https://api.github.com/repos/deltachat/deltachat-desktop/releases/latest | jq -r '.tag_name' | cut -c2-)
        wget -qO source.tgz https://github.com/deltachat/deltachat-desktop/archive/refs/tags/v${version}.tar.gz
        tar xf source.tgz
        rm -f source.tgz
        export DISTDIR="linux-unpacked"
        if [ $(uname -i) == 'aarch64' ]; then
           if [ ! -f "/usr/local/bin/cargo" ]; then
              RUSTVER="1.74.0"
              wget -qO rust.tar.gz https://buechner.me/dist/rust-${RUSTVER}-aarch64-unknown-linux-gnu.tar.gz
              rm -Rf rust-${RUSTVER}-aarch64-unknown-linux-gnu
              tar xpf rust.tar.gz
              cd rust-${RUSTVER}-aarch64-unknown-linux-gnu
              ./install.sh
              cd ..
              rm -Rf rust-${RUSTVER}-aarch64-unknown-linux-gnu
              rm -f rust.tar.gz
              export PATH=$PATH:/usr/local/bin/
           fi
           export DISTDIR="linux-arm64-unpacked"
        fi
        npm install
        npm run build
        npm run pack:linux:dir
        cp -rv dist/${DISTDIR}/* $SNAPCRAFT_PART_INSTALL/
        craftctl set version="$version"
    build-environment:
      - npm_config_unsafe_perm: 'true'
      - SUDO_UID: '0'
      - SUDO_GID: '0'
      - SUDO_USER: 'root'
      - VERSION_INFO_GIT_REF: ${SNAPCRAFT_PROJECT_VERSION}
      - PATH: "$PATH:$SNAPCRAFT_PART_BUILD/node_modules/.bin"

    build-snaps:
      - node/20/stable

    stage-packages:
       - libgtk-3-0
       - libnotify4
       - libnss3
       - libxss1
       - libxtst6
       - xdg-utils
       - libatspi2.0-0
       - libuuid1
       - libsecret-1-0
       - libunity9

    build-packages:
       - curl
       - jq
       - wget
lint:
  ignore:
    - library
